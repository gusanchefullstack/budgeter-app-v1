
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `BudgetCategory` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model BudgetCategory
 * 
 */
export type BudgetCategoryModel = runtime.Types.Result.DefaultSelection<Prisma.$BudgetCategoryPayload>






export type BudgetCategoryCompositeListFilter = {
  equals?: Prisma.BudgetCategoryObjectEqualityInput[]
  every?: Prisma.BudgetCategoryWhereInput
  some?: Prisma.BudgetCategoryWhereInput
  none?: Prisma.BudgetCategoryWhereInput
  isEmpty?: boolean
  isSet?: boolean
}

export type BudgetCategoryOrderByCompositeAggregateInput = {
  _count?: Prisma.SortOrder
}

export type BudgetCategoryListCreateEnvelopeInput = {
  set?: Prisma.BudgetCategoryCreateInput | Prisma.BudgetCategoryCreateInput[]
}

export type BudgetCategoryListUpdateEnvelopeInput = {
  set?: Prisma.BudgetCategoryCreateInput | Prisma.BudgetCategoryCreateInput[]
  push?: Prisma.BudgetCategoryCreateInput | Prisma.BudgetCategoryCreateInput[]
  updateMany?: Prisma.BudgetCategoryUpdateManyInput
  deleteMany?: Prisma.BudgetCategoryDeleteManyInput
}

export type BudgetCategoryWhereInput = {
  AND?: Prisma.BudgetCategoryWhereInput | Prisma.BudgetCategoryWhereInput[]
  OR?: Prisma.BudgetCategoryWhereInput[]
  NOT?: Prisma.BudgetCategoryWhereInput | Prisma.BudgetCategoryWhereInput[]
  name?: Prisma.StringFilter<"BudgetCategory"> | string
  type?: Prisma.EnumCATEGORY_TYPEFilter<"BudgetCategory"> | $Enums.CATEGORY_TYPE
  concepts?: Prisma.BudgetConceptCompositeListFilter | Prisma.BudgetConceptObjectEqualityInput[]
}

export type BudgetConceptObjectEqualityInput = {
  name: string
  type: $Enums.CONCEPT_TYPE
  frequency: $Enums.CONCEPT_FREQUENCY
  recurringBudgetAmount: number
  plannedRecurringAmounts?: Prisma.BudgetBucketObjectEqualityInput[]
  actualRecurringAmounts?: Prisma.BudgetBucketObjectEqualityInput[]
}

export type BudgetConceptCreateInput = {
  name: string
  type?: $Enums.CONCEPT_TYPE
  frequency?: $Enums.CONCEPT_FREQUENCY
  recurringBudgetAmount: number
  plannedRecurringAmounts?: Prisma.BudgetBucketCreateInput | Prisma.BudgetBucketCreateInput[]
  actualRecurringAmounts?: Prisma.BudgetBucketCreateInput | Prisma.BudgetBucketCreateInput[]
}

export type BudgetCategoryUpdateManyInput = {
  where: Prisma.BudgetCategoryWhereInput
  data: Prisma.BudgetCategoryUpdateInput
}

export type BudgetCategoryDeleteManyInput = {
  where: Prisma.BudgetCategoryWhereInput
}

export type BudgetCategoryUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumCATEGORY_TYPEFieldUpdateOperationsInput | $Enums.CATEGORY_TYPE
  concepts?: Prisma.XOR<Prisma.BudgetConceptListUpdateEnvelopeInput, Prisma.BudgetConceptCreateInput> | Prisma.BudgetConceptCreateInput[]
}

export type EnumCATEGORY_TYPEFieldUpdateOperationsInput = {
  set?: $Enums.CATEGORY_TYPE
}



export type BudgetCategorySelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  name?: boolean
  type?: boolean
  concepts?: boolean | Prisma.BudgetConceptDefaultArgs<ExtArgs>
}, ExtArgs["result"]["budgetCategory"]>



export type BudgetCategorySelectScalar = {
  name?: boolean
  type?: boolean
}

export type BudgetCategoryOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"name" | "type" | "concepts", ExtArgs["result"]["budgetCategory"]>
export type BudgetCategoryInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $BudgetCategoryPayload = {
  name: "BudgetCategory"
  objects: {}
  scalars: {
    name: string
    type: $Enums.CATEGORY_TYPE
  }
  composites: {
    concepts: Prisma.$BudgetConceptPayload[]
  }
}

export type BudgetCategoryGetPayload<S extends boolean | null | undefined | BudgetCategoryDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$BudgetCategoryPayload, S>





/**
 * Fields of the BudgetCategory model
 */
export interface BudgetCategoryFieldRefs {
  readonly name: Prisma.FieldRef<"BudgetCategory", 'String'>
  readonly type: Prisma.FieldRef<"BudgetCategory", 'CATEGORY_TYPE'>
}
    

// Custom InputTypes
/**
 * BudgetCategory without action
 */
export type BudgetCategoryDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BudgetCategory
   */
  select?: Prisma.BudgetCategorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BudgetCategory
   */
  omit?: Prisma.BudgetCategoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BudgetCategoryInclude<ExtArgs> | null
}
