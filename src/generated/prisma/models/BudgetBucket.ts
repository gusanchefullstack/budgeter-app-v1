
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `BudgetBucket` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model BudgetBucket
 * 
 */
export type BudgetBucketModel = runtime.Types.Result.DefaultSelection<Prisma.$BudgetBucketPayload>






export type BudgetBucketCompositeListFilter = {
  equals?: Prisma.BudgetBucketObjectEqualityInput[]
  every?: Prisma.BudgetBucketWhereInput
  some?: Prisma.BudgetBucketWhereInput
  none?: Prisma.BudgetBucketWhereInput
  isEmpty?: boolean
  isSet?: boolean
}

export type BudgetBucketWhereInput = {
  AND?: Prisma.BudgetBucketWhereInput | Prisma.BudgetBucketWhereInput[]
  OR?: Prisma.BudgetBucketWhereInput[]
  NOT?: Prisma.BudgetBucketWhereInput | Prisma.BudgetBucketWhereInput[]
  period?: Prisma.StringFilter<"BudgetBucket"> | string
  amount?: Prisma.FloatFilter<"BudgetBucket"> | number
}

export type BudgetBucketListUpdateEnvelopeInput = {
  set?: Prisma.BudgetBucketCreateInput | Prisma.BudgetBucketCreateInput[]
  push?: Prisma.BudgetBucketCreateInput | Prisma.BudgetBucketCreateInput[]
  updateMany?: Prisma.BudgetBucketUpdateManyInput
  deleteMany?: Prisma.BudgetBucketDeleteManyInput
}

export type BudgetBucketUpdateManyInput = {
  where: Prisma.BudgetBucketWhereInput
  data: Prisma.BudgetBucketUpdateInput
}

export type BudgetBucketDeleteManyInput = {
  where: Prisma.BudgetBucketWhereInput
}

export type BudgetBucketUpdateInput = {
  period?: Prisma.StringFieldUpdateOperationsInput | string
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
}



export type BudgetBucketSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  period?: boolean
  amount?: boolean
}, ExtArgs["result"]["budgetBucket"]>



export type BudgetBucketSelectScalar = {
  period?: boolean
  amount?: boolean
}

export type BudgetBucketOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"period" | "amount", ExtArgs["result"]["budgetBucket"]>

export type $BudgetBucketPayload = {
  name: "BudgetBucket"
  objects: {}
  scalars: {
    period: string
    amount: number
  }
  composites: {}
}

export type BudgetBucketGetPayload<S extends boolean | null | undefined | BudgetBucketDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$BudgetBucketPayload, S>





/**
 * Fields of the BudgetBucket model
 */
export interface BudgetBucketFieldRefs {
  readonly period: Prisma.FieldRef<"BudgetBucket", 'String'>
  readonly amount: Prisma.FieldRef<"BudgetBucket", 'Float'>
}
    

// Custom InputTypes
/**
 * BudgetBucket without action
 */
export type BudgetBucketDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BudgetBucket
   */
  select?: Prisma.BudgetBucketSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BudgetBucket
   */
  omit?: Prisma.BudgetBucketOmit<ExtArgs> | null
}
