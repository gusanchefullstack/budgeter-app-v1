
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `CategoryConcept` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model CategoryConcept
 * 
 */
export type CategoryConceptModel = runtime.Types.Result.DefaultSelection<Prisma.$CategoryConceptPayload>






export type CategoryConceptCompositeListFilter = {
  equals?: Prisma.CategoryConceptObjectEqualityInput[]
  every?: Prisma.CategoryConceptWhereInput
  some?: Prisma.CategoryConceptWhereInput
  none?: Prisma.CategoryConceptWhereInput
  isEmpty?: boolean
  isSet?: boolean
}

export type BudgetBucketObjectEqualityInput = {
  plannedYear: number
  plannedMonth?: string | null
  plannedDay?: number | null
  plannedAmount: number
  actualYear?: number | null
  actualMonth?: string | null
  actualDay?: number | null
  actualAmount?: number | null
}

export type BudgetBucketCreateInput = {
  plannedYear: number
  plannedMonth?: string | null
  plannedDay?: number | null
  plannedAmount: number
  actualYear?: number | null
  actualMonth?: string | null
  actualDay?: number | null
  actualAmount?: number | null
}

export type CategoryConceptWhereInput = {
  AND?: Prisma.CategoryConceptWhereInput | Prisma.CategoryConceptWhereInput[]
  OR?: Prisma.CategoryConceptWhereInput[]
  NOT?: Prisma.CategoryConceptWhereInput | Prisma.CategoryConceptWhereInput[]
  name?: Prisma.StringFilter<"CategoryConcept"> | string
  frequency?: Prisma.EnumCONCEPT_FREQUENCYFilter<"CategoryConcept"> | $Enums.CONCEPT_FREQUENCY
  plannedRecurringBudgetAmount?: Prisma.FloatFilter<"CategoryConcept"> | number
  recurringBudgetBuckets?: Prisma.BudgetBucketCompositeListFilter | Prisma.BudgetBucketObjectEqualityInput[]
}

export type CategoryConceptListUpdateEnvelopeInput = {
  set?: Prisma.CategoryConceptCreateInput | Prisma.CategoryConceptCreateInput[]
  push?: Prisma.CategoryConceptCreateInput | Prisma.CategoryConceptCreateInput[]
  updateMany?: Prisma.CategoryConceptUpdateManyInput
  deleteMany?: Prisma.CategoryConceptDeleteManyInput
}

export type CategoryConceptUpdateManyInput = {
  where: Prisma.CategoryConceptWhereInput
  data: Prisma.CategoryConceptUpdateInput
}

export type CategoryConceptDeleteManyInput = {
  where: Prisma.CategoryConceptWhereInput
}

export type CategoryConceptUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  frequency?: Prisma.EnumCONCEPT_FREQUENCYFieldUpdateOperationsInput | $Enums.CONCEPT_FREQUENCY
  plannedRecurringBudgetAmount?: Prisma.FloatFieldUpdateOperationsInput | number
  recurringBudgetBuckets?: Prisma.XOR<Prisma.BudgetBucketListUpdateEnvelopeInput, Prisma.BudgetBucketCreateInput> | Prisma.BudgetBucketCreateInput[]
}



export type CategoryConceptSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  name?: boolean
  frequency?: boolean
  plannedRecurringBudgetAmount?: boolean
  recurringBudgetBuckets?: boolean | Prisma.BudgetBucketDefaultArgs<ExtArgs>
}, ExtArgs["result"]["categoryConcept"]>



export type CategoryConceptSelectScalar = {
  name?: boolean
  frequency?: boolean
  plannedRecurringBudgetAmount?: boolean
}

export type CategoryConceptOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"name" | "frequency" | "plannedRecurringBudgetAmount" | "recurringBudgetBuckets", ExtArgs["result"]["categoryConcept"]>
export type CategoryConceptInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $CategoryConceptPayload = {
  name: "CategoryConcept"
  objects: {}
  scalars: {
    name: string
    frequency: $Enums.CONCEPT_FREQUENCY
    plannedRecurringBudgetAmount: number
  }
  composites: {
    recurringBudgetBuckets: Prisma.$BudgetBucketPayload[]
  }
}

export type CategoryConceptGetPayload<S extends boolean | null | undefined | CategoryConceptDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$CategoryConceptPayload, S>





/**
 * Fields of the CategoryConcept model
 */
export interface CategoryConceptFieldRefs {
  readonly name: Prisma.FieldRef<"CategoryConcept", 'String'>
  readonly frequency: Prisma.FieldRef<"CategoryConcept", 'CONCEPT_FREQUENCY'>
  readonly plannedRecurringBudgetAmount: Prisma.FieldRef<"CategoryConcept", 'Float'>
}
    

// Custom InputTypes
/**
 * CategoryConcept without action
 */
export type CategoryConceptDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the CategoryConcept
   */
  select?: Prisma.CategoryConceptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the CategoryConcept
   */
  omit?: Prisma.CategoryConceptOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CategoryConceptInclude<ExtArgs> | null
}
